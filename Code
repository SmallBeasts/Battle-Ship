// Testing David Stuff.cpp : Defines the entry point for the application.
//

#include "Testing David Stuff.h"
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

using namespace std;
int parse(char* buf, int recheck);
const int MAX_INPUT = 4056;

struct bboard {
	int row;
	int col;
	int* myarray;
	int loaded;
	FILE* savefile;
};

int load(char* buf) {
	int * filebuf;
	char* rawread;
	int result = 0;
	int row = 0;
	int col = 0;
	int len = 0;
	FILE* fptr;
	memset(buf, '\0', MAX_INPUT);
	scanf("%s", buf);
	if (parse(buf, 1)) {
		fptr = fopen(buf, "r");
		if (fptr == NULL) {
			printf("Failed to load");
			return -1;
		}
	}
	else
		return -1;
	fscanf(fptr, "%i%i", &row, &col);
	len = row * col;
	filebuf = (int*)malloc(sizeof(int) * len);
	if (filebuf == NULL) {
		return -1;
	}
	else {
		printf("Rows are %i, Cols are %i", row, col);
	}
	int tmploc = 0;
	for (int x = 0; x < len; ++x) {
		fscanf(fptr, "%i,", &filebuf[x]);
	}
	printf("Value is: ");
	for (int i = 0; i < len; ++i) {
		printf("%i,", filebuf[i]);
	}
	free(filebuf);
}


int parse(char* buf, int recheck) {
	if (!recheck)
		scanf("%s", buf);
	if (strncmp(buf, "--guess", MAX_INPUT) == 0) {
		printf("Got a guess\n");
		return 0;
	}
	else if (strncmp(buf, "--load", MAX_INPUT) == 0) {
		printf("Got a load\n");
		load(buf);
		return 0;
	}
	return 1;
}

int main()
{
	cout << "Hello CMake." << endl;
	char command[MAX_INPUT];
	parse(command, 0);
	return 0;
}
